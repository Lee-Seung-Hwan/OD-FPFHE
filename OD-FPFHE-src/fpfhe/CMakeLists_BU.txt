#
# CMakeLists.txt for FPFHE library
#

# all files named *.cpp are compiled to form the library
file (GLOB FPFHE_SRC_FILES CONFIGURE_DEPENDS lib/*.cpp)

include_directories(${CORE_INCLUDE_DIRS})
list(APPEND FPFHE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/include")
list(APPEND FPFHE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/lib")
include_directories(${FPFHE_INCLUDE_DIRS})

set(FPFHE_VERSION_MAJOR ${PALISADE_VERSION_MAJOR})
set(FPFHE_VERSION_MINOR ${PALISADE_VERSION_MINOR})
set(FPFHE_VERSION_PATCH ${PALISADE_VERSION_PATCH})
set(FPFHE_VERSION ${FPFHE_VERSION_MAJOR}.${FPFHE_VERSION_MINOR}.${FPFHE_VERSION_PATCH})

add_library(binfheobj OBJECT ${FPFHE_SRC_FILES})
set_property(TARGET binfheobj PROPERTY POSITION_INDEPENDENT_CODE 1)

if ( BUILD_SHARED )
	add_dependencies(binfheobj PALISADEcore)
	add_library (PALISADEbinfhe SHARED $<TARGET_OBJECTS:binfheobj>)
	set_property(TARGET PALISADEbinfhe PROPERTY VERSION ${FPFHE_VERSION})
	set_property(TARGET PALISADEbinfhe PROPERTY SOVERSION ${FPFHE_VERSION_MAJOR})
	set_property(TARGET PALISADEbinfhe PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
	install(TARGETS PALISADEbinfhe
		EXPORT PalisadeTargets
		DESTINATION lib)
endif()

if( BUILD_STATIC )
add_dependencies(binfheobj PALISADEcore_static)
	add_library (PALISADEbinfhe_static STATIC $<TARGET_OBJECTS:binfheobj>)
	set_property(TARGET PALISADEbinfhe_static PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
	install(TARGETS PALISADEbinfhe_static
		EXPORT PalisadeTargets
		DESTINATION lib)
endif()

install(DIRECTORY include/
	DESTINATION include/palisade/binfhe)

add_custom_target( allbinfhe )

if( BUILD_SHARED )
set (FPFHELIBS PUBLIC PALISADEbinfhe PUBLIC PALISADEcore ${THIRDPARTYLIBS} ${OpenMP_CXX_FLAGS})
	target_link_libraries (PALISADEbinfhe PUBLIC PALISADEcore ${THIRDPARTYLIBS} ${OpenMP_CXX_FLAGS})
	add_dependencies( allbinfhe PALISADEbinfhe  )
endif()

if( BUILD_STATIC )
set (FPFHELIBS ${FPFHELIBS} PUBLIC PALISADEbinfhe_static PUBLIC PALISADEcore_static ${THIRDPARTYSTATICLIBS} ${OpenMP_CXX_FLAGS})
	target_link_libraries (PALISADEbinfhe_static PUBLIC PALISADEcore_static ${THIRDPARTYSTATICLIBS} ${OpenMP_CXX_FLAGS})
	add_dependencies( allbinfhe PALISADEbinfhe_static )
endif()

if( BUILD_UNITTESTS )
	file (GLOB FPFHE_TEST_SRC_FILES CONFIGURE_DEPENDS unittest/*.cpp)
	add_executable (binfhe_tests ${FPFHE_TEST_SRC_FILES} ${UNITTESTMAIN})
	set_property(TARGET binfhe_tests PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/unittest)
	target_link_libraries ( fpfhe_tests ${FPFHELIBS})
	if (NOT ${WITH_OPENMP})
		target_link_libraries ( binfhe_tests PRIVATE Threads::Threads)
	endif()

	add_dependencies( allbinfhe binfhe_tests )

	add_custom_command( OUTPUT runbinfhetests WORKING_DIRECTORY ${CMAKE_BINARY_DIR} COMMAND ${CMAKE_BINARY_DIR}/unittest/binfhe_tests )
	add_custom_target( testbinfhe DEPENDS binfhe_tests runbinfhetests )
endif()

set (FPFHEAPPS "")
if( BUILD_EXAMPLES)
	file (GLOB FPFHE_EXAMPLES_SRC_FILES CONFIGURE_DEPENDS examples/*.cpp)
	foreach (app ${FPFHE_EXAMPLES_SRC_FILES})
		get_filename_component ( exe ${app} NAME_WE )
		add_executable ( ${exe} ${app} )
		set_property(TARGET ${exe} PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/examples/binfhe)
		set( FPFHEAPPS ${FPFHEAPPS} ${exe} )
		target_link_libraries ( ${exe} ${FPFHELIBS} )
	endforeach()

	add_custom_target( allbinfheexamples )
	add_dependencies( allbinfheexamples ${FPFHEAPPS} )
	add_dependencies( allbinfhe allbinfheexamples)
endif()

add_custom_command( OUTPUT binfheinfocmd COMMAND echo Builds PALISADEbinfhe and these
apps: ${FPFHEAPPS} )
add_custom_target( binfheinfo DEPENDS binfheinfocmd )
